/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import nutricionista.modelos.Conexion;
import nutricionista.modelos.Dieta;
import nutricionista.modelos.DietaComidaData;
import nutricionista.modelos.DietaComidaPacienteComida;
import nutricionista.modelos.DietaData;
import nutricionista.modelos.Paciente;
import nutricionista.modelos.PacienteData;


public class dietaF extends javax.swing.JInternalFrame {

     private DefaultTableModel modelo; //  modelos para las tablas a utilizar
     private DefaultTableModel modelo2;//

     private boolean aux  ;   // 
     private PacienteData pd ;
     private  List<Paciente> lista = null;
     
     /**
     
     * Creates new form dietaF
     */
    public dietaF() {
         try {
             Conexion con = new Conexion();
             pd = new PacienteData(con);
             initComponents();
             modelo = new DefaultTableModel();
             modelo2 = new DefaultTableModel();
             armarCabezeraTabla();
             armarCabezaTabla2();
             
             
             List<Paciente>lista  = pd.obtenerPaciente();  // obtiene pacientes y los agrega al ComboBox
 
             for(Paciente it:lista){
                 CBid.addItem(it.getNombre());
                 CBid.setSelectedItem(null);
                 
             }

             
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
         }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TFidDieta = new javax.swing.JTextField();
        TFidPaciente = new javax.swing.JTextField();
        TFfechaInicial = new javax.swing.JTextField();
        TFfechaFinal = new javax.swing.JTextField();
        TFpesoInicial = new javax.swing.JTextField();
        TFpesoBuscado = new javax.swing.JTextField();
        Bbuscar = new javax.swing.JButton();
        Bactualizar = new javax.swing.JButton();
        Bborrar = new javax.swing.JButton();
        Bguardar = new javax.swing.JButton();
        BbuscarTodo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTresultadosDieta = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Blimpiar = new javax.swing.JButton();
        Batras = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        TFcomportamiento = new javax.swing.JTextField();
        Bcomportamiento = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTresultadosPaciente = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        CBid = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(895, 625));

        TFidDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFidDietaActionPerformed(evt);
            }
        });
        TFidDieta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFidDietaKeyTyped(evt);
            }
        });

        TFidPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFidPacienteActionPerformed(evt);
            }
        });
        TFidPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFidPacienteKeyTyped(evt);
            }
        });

        TFfechaInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFfechaInicialActionPerformed(evt);
            }
        });
        TFfechaInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFfechaInicialKeyTyped(evt);
            }
        });

        TFfechaFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFfechaFinalKeyTyped(evt);
            }
        });

        TFpesoInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFpesoInicialActionPerformed(evt);
            }
        });
        TFpesoInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFpesoInicialKeyTyped(evt);
            }
        });

        TFpesoBuscado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFpesoBuscadoKeyTyped(evt);
            }
        });

        Bbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoBuscar.png"))); // NOI18N
        Bbuscar.setText("Buscar");
        Bbuscar.setToolTipText("Buscar dieta por id de paciente");
        Bbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BbuscarActionPerformed(evt);
            }
        });

        Bactualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoActualizar.png"))); // NOI18N
        Bactualizar.setText("Actualizar");
        Bactualizar.setToolTipText("Actualizar los datos de una dieta de la base de datos");
        Bactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BactualizarActionPerformed(evt);
            }
        });

        Bborrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoBorrar.png"))); // NOI18N
        Bborrar.setText("Borrar");
        Bborrar.setToolTipText("Borrar Dieta de la base de datos");
        Bborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BborrarActionPerformed(evt);
            }
        });

        Bguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoGuardar.png"))); // NOI18N
        Bguardar.setText("Guardar");
        Bguardar.setToolTipText("Guardar dieta en la base de datos");
        Bguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BguardarActionPerformed(evt);
            }
        });

        BbuscarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoBuscar.png"))); // NOI18N
        BbuscarTodo.setText("BuscarTodo");
        BbuscarTodo.setToolTipText("Mostrar todas las dietas de la base de datos");
        BbuscarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BbuscarTodoActionPerformed(evt);
            }
        });

        JTresultadosDieta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        JTresultadosDieta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTresultadosDietaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTresultadosDieta);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("ID Dieta");

        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Fecha Inicial");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Fecha Final");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Peso Inicial");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Peso Buscado");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("ID Paciente:");

        Blimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoLimpiar.png"))); // NOI18N
        Blimpiar.setText("Limpiar");
        Blimpiar.setToolTipText("Limpiar todos los campos");
        Blimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlimpiarActionPerformed(evt);
            }
        });

        Batras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoAtras.png"))); // NOI18N
        Batras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatrasActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("PACIENTES QUE DEBEN BAJAR MAS DE UNA CANTIDAD DE KILOS DADOS");

        TFcomportamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFcomportamientoActionPerformed(evt);
            }
        });
        TFcomportamiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFcomportamientoKeyTyped(evt);
            }
        });

        Bcomportamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconoBuscar.png"))); // NOI18N
        Bcomportamiento.setText("BUSCAR");
        Bcomportamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BcomportamientoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Candara Light", 1, 24)); // NOI18N
        jLabel9.setText("-Dieta-");

        JTresultadosPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(JTresultadosPaciente);
        if (JTresultadosPaciente.getColumnModel().getColumnCount() > 0) {
            JTresultadosPaciente.getColumnModel().getColumn(0).setResizable(false);
            JTresultadosPaciente.getColumnModel().getColumn(1).setResizable(false);
            JTresultadosPaciente.getColumnModel().getColumn(2).setResizable(false);
            JTresultadosPaciente.getColumnModel().getColumn(3).setResizable(false);
        }

        jSeparator1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        CBid.setToolTipText("Seleccionar Paciente");
        CBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBidActionPerformed(evt);
            }
        });

        jLabel10.setText("ej: DD/MM/YYYY");

        jLabel11.setText("ej: DD/MM/YYYY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(Batras, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(TFcomportamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Bcomportamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBid, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(294, 294, 294)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel7)
                                                        .addComponent(jLabel1))
                                                    .addGap(12, 12, 12)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(TFidDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(TFidPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Bguardar)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGap(82, 82, 82)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(Bbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(BbuscarTodo)))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(Bborrar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(36, 36, 36)))))
                                            .addGap(11, 11, 11)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(23, 23, 23)
                                                    .addComponent(Bactualizar)
                                                    .addGap(60, 60, 60)
                                                    .addComponent(Blimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel3)
                                                            .addGap(31, 31, 31)
                                                            .addComponent(TFfechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel4)
                                                                .addComponent(jLabel5)
                                                                .addComponent(jLabel6))
                                                            .addGap(27, 27, 27)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(TFpesoBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(TFfechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(TFpesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel10)
                                                        .addComponent(jLabel11)))))
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(jLabel9)))))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(Batras))
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(TFfechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BbuscarTodo)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TFfechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(TFidPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TFpesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(TFidDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bbuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TFpesoBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bguardar)
                    .addComponent(Bborrar)
                    .addComponent(Bactualizar)
                    .addComponent(Blimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TFcomportamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(Bcomportamiento))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        setBounds(0, 0, 895, 640);
    }// </editor-fold>//GEN-END:initComponents

    private void BcomportamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BcomportamientoActionPerformed
        try {
            borrarFilas2();
                
           // armarCabezaTabla23();
            Conexion con = new Conexion();
            DietaData dd = new DietaData(con);
            List<Paciente> lista = dd.buscarPacientesQueDebenBajar5(Integer.parseInt(TFcomportamiento.getText()));
             for(Paciente m:lista){
                modelo2.addRow(new Object[]{m.getIdPaciente(), m.getNombre(),m.getDni(),m.getDomicilio(),m.getCelular()});

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BcomportamientoActionPerformed

    private void TFcomportamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFcomportamientoActionPerformed

    }//GEN-LAST:event_TFcomportamientoActionPerformed

    private void BatrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatrasActionPerformed

        this.moveToBack();
        this.setVisible(false);

    }//GEN-LAST:event_BatrasActionPerformed

    private void BlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlimpiarActionPerformed
        TFidDieta.setText(null);
        TFidPaciente.setText(null);                  // limpio los TF y tambien las tablas
        TFfechaInicial.setText(null);
        TFfechaFinal.setText(null);              
        TFpesoInicial.setText(null);
        TFpesoBuscado.setText(null);
        borrarFilas();
        borrarFilas2();
    }//GEN-LAST:event_BlimpiarActionPerformed

    private void JTresultadosDietaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTresultadosDietaMouseClicked
        int index = JTresultadosDieta.getSelectedRow();
        TableModel model = JTresultadosDieta.getModel();
        String value1 = model.getValueAt(index, 0).toString();
        String value2 = model.getValueAt(index, 1).toString();  // llevo los datos de la tabla a los TF uno a la vez seleccionando a travez de un indice
        String value3 = model.getValueAt(index, 2).toString();
        String value4 = model.getValueAt(index, 3).toString();
        String value5 = model.getValueAt(index, 4).toString();
        String value6 = model.getValueAt(index, 5).toString();
        TFidDieta.setText(value1);
        TFidPaciente.setText(value2);
        TFfechaInicial.setText(value3);
        TFfechaFinal.setText(value4);
        TFpesoInicial.setText(value5);
        TFpesoBuscado.setText(value6);
    }//GEN-LAST:event_JTresultadosDietaMouseClicked

    private void BbuscarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BbuscarTodoActionPerformed
        try {
            borrarFilas();
            Conexion con = new Conexion();
            DietaData dd = new DietaData(con);
            List<Dieta> lista = dd.obtenerDietas3();
            for(Dieta m:lista){
                modelo.addRow(new Object[]{m.getId(),m.getPaciente(),m.getFechaInicial(),m.getFechaFinal(),m.getPesoInicial(),m.getPesoFinal()});

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BbuscarTodoActionPerformed

    private void BguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BguardarActionPerformed
        try {
            Conexion con = new Conexion();
            DietaData dd = new DietaData(con);
            Dieta nueva = new Dieta();
            String inicio = TFfechaInicial.getText(); //fecha inicio formato texto
            String ffinal = TFfechaFinal.getText();// fecha final formato texto
            LocalDate localDate1 = LocalDate.parse(inicio, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            LocalDate localDate2 = LocalDate.parse(ffinal, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            System.out.println(localDate1);
             System.out.println(localDate2);
            nueva.setPaciente(Integer.parseInt(TFidPaciente.getText()));
            nueva.setFechaInicial(localDate1); //formato de fecha
            nueva.setFechaFinal(localDate2);
            nueva.setPesoInicial(Float.parseFloat(TFpesoInicial.getText()));
            nueva.setPesoFinal(Float.parseFloat(TFpesoBuscado.getText()));
            dd.guardarDieta(nueva);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BguardarActionPerformed

    private void BborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BborrarActionPerformed
        try {
            Conexion con = new Conexion();
            DietaData dd = new DietaData(con);
            DietaComidaData dc = new DietaComidaData(con);
            List<DietaComidaPacienteComida> DCD = null;
            DCD = dc.buscarDietaComidaPorIdDieta(Integer.parseInt(TFidDieta.getText()));
            if(DCD != null)                // checkeo que en la tabla Dieta Comida no haya una dieta guardada con el mismo id en la Tabla DietaComida, si la hay borrarla antes para poder borrar la dienta en la tabla dieta
            {
                dc.borrarDietaComida(Integer.parseInt(TFidDieta.getText()));            
                dd.borrarDieta2(Integer.parseInt(TFidDieta.getText()));
            }
            else
            {
               dd.borrarDieta2(Integer.parseInt(TFidDieta.getText())); 
            }
            dd.borrarDieta2(Integer.parseInt(TFidDieta.getText()));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BborrarActionPerformed

    private void BactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BactualizarActionPerformed
        try {
            Conexion con = new Conexion();
            DietaData dd = new DietaData(con);
            Dieta nueva = new Dieta();
            nueva.setId(Integer.parseInt(TFidPaciente.getText()));                //     
            nueva.setPaciente(Integer.parseInt(TFidPaciente.getText()));            //
            nueva.setFechaInicial(LocalDate.parse(TFfechaInicial.getText()));       //     almaceno todos los TF en una nueva dieta
            nueva.setFechaFinal(LocalDate.parse(TFfechaFinal.getText()));           //    y luega la actualizo
            nueva.setPesoInicial(Float.parseFloat(TFpesoInicial.getText()));        //
            nueva.setPesoFinal(Float.parseFloat(TFpesoBuscado.getText()));          //

            dd.actualizarDieta(nueva);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BactualizarActionPerformed

    private void BbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BbuscarActionPerformed
        try {
            borrarFilas(); //refrescar la tabla a 0
            Conexion con = new Conexion();
            DietaData dd = new DietaData(con);
            Dieta nueva = new Dieta();
            nueva = dd.buscarDietaporPaciente(Integer.parseInt(TFidPaciente.getText()));
            modelo.addRow(new Object[]{nueva.getId(),nueva.getPaciente(),nueva.getFechaInicial(), nueva.getFechaFinal(),nueva.getPesoInicial(),nueva.getPesoFinal()});

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(dietaF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BbuscarActionPerformed

    private void TFpesoInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFpesoInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFpesoInicialActionPerformed

    private void TFfechaInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFfechaInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFfechaInicialActionPerformed

    private void TFidPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFidPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFidPacienteActionPerformed

    private void TFidDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFidDietaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFidDietaActionPerformed

    private void TFidDietaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFidDietaKeyTyped
        
        if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de tecto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
        
        
        
        
        
        
    }//GEN-LAST:event_TFidDietaKeyTyped

    private void TFidPacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFidPacienteKeyTyped
        
        if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de texto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
        
        
        
    }//GEN-LAST:event_TFidPacienteKeyTyped

    private void TFfechaInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFfechaInicialKeyTyped
       if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de texto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
    }//GEN-LAST:event_TFfechaInicialKeyTyped

    private void TFfechaFinalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFfechaFinalKeyTyped
      if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de texto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
    }//GEN-LAST:event_TFfechaFinalKeyTyped

    private void TFpesoInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFpesoInicialKeyTyped
     if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de tecto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
    }//GEN-LAST:event_TFpesoInicialKeyTyped

    private void TFpesoBuscadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFpesoBuscadoKeyTyped
     if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de tecto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
    }//GEN-LAST:event_TFpesoBuscadoKeyTyped

    private void TFcomportamientoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFcomportamientoKeyTyped
      if(Character.isLetter(evt.getKeyChar())){ /*si en el campo de tecto para id lo que se ingresa es una letra lanza la siguiente
                                                       exepcion*/
          
      getToolkit().beep();
      evt.consume();
          JOptionPane.showMessageDialog(rootPane,"Ingrese Solo Numeros");
      }
      else{//caso contrario no hace nada 
      
      
      }
    }//GEN-LAST:event_TFcomportamientoKeyTyped

    private void CBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBidActionPerformed
      if(CBid.getSelectedItem() != null) // Si el ComboBox tiene seleccionado algo
       {  
              Paciente auxPaciente = new Paciente();
              auxPaciente = pd.buscarPacienteNombre(CBid.getSelectedItem().toString());
              TFidPaciente.setText(Integer.toString(auxPaciente.getIdPaciente()));

       }
      else
      {
           TFidPaciente.setText(null);  // dejarlo vacio al no seleccionar nada
      }
      
     
    }//GEN-LAST:event_CBidActionPerformed

public void armarCabezeraTabla()
    {
        ArrayList<Object> columnas = new ArrayList<Object>();
        
        columnas.add("idDieta");
        columnas.add("idPaciente");
        columnas.add("Fecha Inicio");    // Arma cabezera
        columnas.add("Fecha Final");
        columnas.add("Peso Inicial");
        columnas.add("Peso Buscado");
         for(Object it:columnas)
         {
            modelo.addColumn(it);
            
         }
         JTresultadosDieta.setModel(modelo);
         
         Class<?> col_class = JTresultadosDieta.getColumnClass(4);
         JTresultadosDieta.setDefaultEditor(col_class, null);
         
    }
public void armarCabezaTabla2() // formar la segunda tabla
{
        ArrayList<Object> columnas = new ArrayList<Object>();
      
        
        columnas.add("idPaciente");
        columnas.add("nombre");
        columnas.add("dni");             // nombre de las cabeceras
        columnas.add("domicilio");
        columnas.add("celular");
        
         for(Object it:columnas)
         {
            modelo2.addColumn(it);   //agregarlas al modelo
            
         }
         JTresultadosPaciente.setModel(modelo2);  // asignar el modelo a la tabla
         Class<?> col_class = JTresultadosPaciente.getColumnClass(4);
         JTresultadosPaciente.setDefaultEditor(col_class, null);



}
public void borrarFilas()  // borrar filas para la primer tabla
     {
     int a = modelo.getRowCount()-1;
      for(int i = a;i>=0;i--){
      modelo.removeRow(i);
      }
    }
public void borrarFilas2()
     {
     int a = modelo2.getRowCount()-1; // borrar filas para la segunda tabla
      for(int i = a;i>=0;i--){
      modelo2.removeRow(i);
      }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bactualizar;
    private javax.swing.JButton Batras;
    private javax.swing.JButton Bborrar;
    private javax.swing.JButton Bbuscar;
    private javax.swing.JButton BbuscarTodo;
    private javax.swing.JButton Bcomportamiento;
    private javax.swing.JButton Bguardar;
    private javax.swing.JButton Blimpiar;
    private javax.swing.JComboBox<String> CBid;
    private javax.swing.JTable JTresultadosDieta;
    private javax.swing.JTable JTresultadosPaciente;
    private javax.swing.JTextField TFcomportamiento;
    private javax.swing.JTextField TFfechaFinal;
    private javax.swing.JTextField TFfechaInicial;
    private javax.swing.JTextField TFidDieta;
    private javax.swing.JTextField TFidPaciente;
    private javax.swing.JTextField TFpesoBuscado;
    private javax.swing.JTextField TFpesoInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
